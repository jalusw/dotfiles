---
- name: Setup Local Development Environment
  hosts: localhost
  become: yes
  vars:
    user_home: "{{ ansible_env.HOME }}"
    dotfiles_dir: "{{ user_home }}/dotfiles"
  tasks:
    - name: Update and upgrade system
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600
      tags: [system, update]

    # Essentials tools
    - name: Install basic tools
      apt:
        name:
          - git
          - curl
          - wget
          - unzip
          - build-essential
          - make
          - software-properties-common
          - ca-certificates
          - gnupg
          - lsb-release
          - htop
          - tree
          - jq
          - ripgrep
          - fd-find
          - bat
          - fzf
        state: present
      tags: [tools, basic]

    # Docker
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags: [docker]

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
        state: present
        filename: docker
      tags: [docker]

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: yes
      tags: [docker]

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes
      tags: [docker]

    # Window Manager
    - name: Install i3 window manager and tools
      apt:
        name:
          - i3
          - i3status
          - i3lock
          - dmenu
          - rofi
          - picom
          - feh
          - scrot
          - arandr
        state: present
      tags: [i3, desktop]

    # Neovim
    - name: Add Neovim PPA
      apt_repository:
        repo: ppa:neovim-ppa/unstable
        state: present
      tags: [neovim]

    - name: Install Neovim
      apt:
        name: neovim
        state: present
      tags: [neovim]

    # Golang
    - name: Install Golang
      apt:
        name:
          - golang
        state: present
      tags: [golang]

    # Volta and Node.js
    - name: Install Volta
      shell: |
        curl https://get.volta.sh | bash
      args:
        executable: /bin/bash
      tags: [nodejs, volta]

    - name: Install Node.js using Volta
      shell: |
        export VOLTA_HOME="{{ user_home }}/.volta"
        export PATH="$VOLTA_HOME/bin:$PATH"
        volta install node
      environment:
        VOLTA_HOME: "{{ user_home }}/.volta"
        PATH: "{{ user_home }}/.volta/bin:{{ ansible_env.PATH }}"
      tags: [nodejs, volta]

    # Python
    - name: Install pyenv dependencies
      apt:
        name:
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - curl
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libffi-dev
          - liblzma-dev
          - python3-openssl
        state: present
      tags: [python, pyenv]

    - name: Install pyenv
      shell: |
        curl https://pyenv.run | bash
      args:
        executable: /bin/bash
      tags: [python, pyenv]

    - name: Configure pyenv in shell
      lineinfile:
        path: "{{ user_home }}/.bashrc"
        line: |
          export PATH="{{ user_home }}/.pyenv/bin:$PATH"
          eval "$(pyenv init --path)"
          eval "$(pyenv virtualenv-init -)"
      tags: [python, pyenv]

    - name: Install Python using pyenv
      shell: |
        export PATH="{{ user_home }}/.pyenv/bin:$PATH"
        eval "$(pyenv init --path)"
        pyenv install 3.10.0
        pyenv global 3.10.0
      environment:
        PATH: "{{ user_home }}/.pyenv/bin:{{ ansible_env.PATH }}"
      tags: [python, pyenv]

    - name: Install Python packages
      pip:
        name:
          - uvloop
        state: present
      tags: [python, packages]

    # C Build System
    - name: Install C build system tools
      apt:
        name:
          - cmake
          - ninja-build
        state: present
      tags: [c, build-system]
